{"version":3,"file":"static/js/195.735c774a.chunk.js","mappings":"0OACA,GAAgB,cAAgB,mCAAmC,iBAAmB,uC,mBCgFtF,EA1EoB,WAClB,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,GAAWC,EAAAA,EAAAA,MAkCjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,YAAoBC,SAjCjB,SAAAC,GACpBA,EAAEC,iBAEF,IAAMC,EAAW,CAAEjB,KAAAA,EAAMI,OAAAA,GAEnBc,EAAeC,MAAMC,QAAQd,IAAaA,EAASe,MAC3D,SAAAC,GAAA,IAAGtB,EAAIsB,EAAJtB,KAAMI,EAAMkB,EAANlB,OAAM,OACbJ,EAAKuB,gBAAkBN,EAASjB,KAAKuB,eACrCnB,IAAWa,EAASb,MAAM,IAI1B,GAAIc,EACFM,MAAM,GAADC,OAAIR,EAASjB,KAAI,gCADxB,CAKA,IAAM0B,GAAUC,EAAAA,EAAAA,GAAA,GACXV,GAELR,GAASmB,EAAAA,EAAAA,IAAcF,IACvBzB,EAAQ,IACRI,EAAU,GAPV,CAQF,EAU+DwB,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACFlB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAagB,SAAA,CAAC,QAE9BC,EAAAA,EAAAA,KAAA,SACElB,UAAWC,EAAAA,MACXkB,KAAK,OACL/B,KAAK,OACLgC,MAAOhC,EACPiC,SAjBiB,SAAAlB,GACvBd,EAAQc,EAAEmB,OAAOF,MACnB,EAgBQG,UAAQ,QAGZxB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAagB,SAAA,CAAC,UAE9BC,EAAAA,EAAAA,KAAA,SACElB,UAAWC,EAAAA,MACXkB,KAAK,MACL/B,KAAK,SACLgC,MAAO5B,EACP6B,SAzBgB,SAAAlB,GACtBV,EAAUU,EAAEmB,OAAOF,MACrB,EAwBQG,UAAQ,QAIZL,EAAAA,EAAAA,KAAA,UAAQlB,UAAWC,EAAAA,UAAkBkB,KAAK,SAAQF,SAAC,iBAGnDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAGV,EC3EaO,EAAc,WACzB,IAAM3B,GAAWC,EAAAA,EAAAA,MAEX2B,GAAkB9B,EAAAA,EAAAA,KAAY,SAAA+B,GAAK,OAAIC,EAAAA,EAAAA,IAAsBD,EAAM,IAEzE,OACER,EAAAA,EAAAA,KAAAU,EAAAA,SAAA,CAAAX,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGQ,EAAgBI,KAAI,SAAAC,GACnB,OACE/B,EAAAA,EAAAA,MAAA,MAAAkB,SAAA,EACElB,EAAAA,EAAAA,MAAA,KAAAkB,SAAA,CACGa,EAAK1C,KAAK,MAAE8B,EAAAA,EAAAA,KAAA,QAAAD,SAAOa,EAAKtC,aAE3B0B,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACL/B,KAAK,SACL2C,QAAS,kBAAMlC,GAASmC,EAAAA,EAAAA,IAAiBF,EAAKG,IAAI,EAAChB,SACpD,aARMa,EAAKG,GAalB,OAIR,E,UC5BaC,EAAS,WACpB,IAAMrC,GAAWC,EAAAA,EAAAA,MACXsB,GAAQzB,EAAAA,EAAAA,KAAY,SAAA+B,GAAK,OAAIA,EAAMS,OAAOA,MAAM,IAMtD,OACEpC,EAAAA,EAAAA,MAAA,SAAAkB,SAAA,CAAO,yBAELC,EAAAA,EAAAA,KAAA,SACEE,MAAOA,EACPD,KAAK,OACLiB,YAAY,eACZf,SAXe,SAAAlB,GACnBN,GAASwC,EAAAA,EAAAA,GAAUlC,EAAEmB,OAAOF,OAC9B,MAaF,ECJA,EAXiB,WACb,IAAMkB,GAAY3C,EAAAA,EAAAA,KAAY,SAAA+B,GAAK,OAAIA,EAAMhC,SAAS4C,SAAS,IAC/D,OACIvC,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAAX,SAAA,EACIC,EAAAA,EAAAA,KAACqB,EAAW,IACXD,GAAYpB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAAiBC,EAAAA,EAAAA,KAACgB,EAAM,KACxChB,EAAAA,EAAAA,KAACM,EAAW,MAGxB,C","sources":["webpack://react-homework-template/./src/styles/ContactForm.module.css?3f1b","components/ContactForm.jsx","components/ContactList.jsx","components/Filter.jsx","components/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__lUM5u\",\"addContactButton\":\"ContactForm_addContactButton__KgQRr\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  {apiAddContact}  from '../redux/contactsSlice';\n\nimport styles from '../styles/ContactForm.module.css';\nimport { selectContacts } from '../redux/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  \n  const dispatch = useDispatch();\n\n  const addNewContact = e => {\n    e.preventDefault();\n\n    const formData = { name, number };\n\n    const isInContacts = Array.isArray(contacts) && contacts.some(\n  ({ name, number }) =>\n    name.toLowerCase() === formData.name.toLowerCase() ||\n    number === formData.number\n);\n\n\n    if (isInContacts) {\n      alert(`${formData.name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      ...formData,\n    };\n    dispatch(apiAddContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleChangeNum = e => {\n    setNumber(e.target.value);\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={addNewContact}>\n    <h1>Phonebook</h1>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNum}\n          required\n        /> \n      </label>\n\n      <button className={styles.addButton} type=\"submit\">\n        add contact\n      </button>\n      <h2>Contacts</h2>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { apiRemoveContact } from '../redux/contactsSlice';\nimport { selectVisibleContacts } from '../redux/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(state => selectVisibleContacts(state));\n\n  return (\n    <>\n      <ul>\n        {visibleContacts.map(item => {\n          return (\n            <li key={item.id}>\n              <p>\n                {item.name}: <span>{item.number}</span>\n              </p>\n              <button\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => dispatch(apiRemoveContact(item.id))}\n              >\n                delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filter.filter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        value={value}\n        type=\"text\"\n        placeholder=\"find contact\"\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux'; \n\nimport ContactForm from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\n\nconst Contacts = () => {\n    const isLoading = useSelector(state => state.contacts.isLoading);\n    return (\n        <>\n            <ContactForm />\n            {isLoading ? <p>Loading...</p> : <Filter />}\n            <ContactList />\n        </>\n    );\n};\n\nexport default Contacts;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsxs","className","styles","onSubmit","e","preventDefault","formData","isInContacts","Array","isArray","some","_ref","toLowerCase","alert","concat","newContact","_objectSpread","apiAddContact","children","_jsx","type","value","onChange","target","required","ContactList","visibleContacts","state","selectVisibleContacts","_Fragment","map","item","onClick","apiRemoveContact","id","Filter","filter","placeholder","setFilter","isLoading","ContactForm"],"sourceRoot":""}