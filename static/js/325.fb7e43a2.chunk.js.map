{"version":3,"file":"static/js/325.fb7e43a2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/styles/ContactForm.module.css?3f1b","components/ContactForm.jsx","components/ContactList.jsx","components/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__lUM5u\",\"addContactButton\":\"ContactForm_addContactButton__KgQRr\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  {apiAddContact}  from '../redux/contactsSlice';\n\nimport styles from '../styles/ContactForm.module.css';\nimport { selectContacts } from '../redux/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  \n  const dispatch = useDispatch();\n\n  const addNewContact = e => {\n    e.preventDefault();\n\n    const formData = { name, number };\n\n    const isInContacts = Array.isArray(contacts) && contacts.some(\n  ({ name, number }) =>\n    name.toLowerCase() === formData.name.toLowerCase() ||\n    number === formData.number\n);\n\n\n    if (isInContacts) {\n      alert(`${formData.name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      ...formData,\n    };\n    dispatch(apiAddContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleChangeNum = e => {\n    setNumber(e.target.value);\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={addNewContact}>\n    <h1>Phonebook</h1>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNum}\n          required\n        /> \n      </label>\n\n      <button className={styles.addButton} type=\"submit\">\n        add contact\n      </button>\n      <h2>Contacts</h2>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { apiRemoveContact } from '../redux/contactsSlice';\nimport { selectVisibleContacts } from '../redux/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(state => selectVisibleContacts(state));\n\n  return (\n    <>\n      <ul>\n        {visibleContacts.map(item => {\n          return (\n            <li key={item.id}>\n              <p>\n                {item.name}: <span>{item.number}</span>\n              </p>\n              <button\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => dispatch(apiRemoveContact(item.id))}\n              >\n                delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filter.filter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        value={value}\n        type=\"text\"\n        placeholder=\"find contact\"\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; \n\nimport ContactForm from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\nimport { apiGetContacts } from '../redux/contactsSlice';\n\nconst Contacts = () => {\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        dispatch(apiGetContacts())\n    },[dispatch])\n    \n    const isLoading = useSelector(state => state.contacts.isLoading);\n    return (\n        <>\n            <ContactForm />\n            {isLoading ? <p>Loading...</p> : <Filter />}\n            <ContactList />\n        </>\n    );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","name","setName","useState","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsxs","className","styles","contactForm","onSubmit","e","preventDefault","formData","isInContacts","Array","isArray","some","_ref","toLowerCase","alert","concat","newContact","apiAddContact","children","_jsx","label","input","type","value","onChange","target","required","addButton","ContactList","visibleContacts","state","selectVisibleContacts","_Fragment","map","item","onClick","apiRemoveContact","id","Filter","filter","placeholder","setFilter","Contacts","useEffect","apiGetContacts","isLoading"],"sourceRoot":""}